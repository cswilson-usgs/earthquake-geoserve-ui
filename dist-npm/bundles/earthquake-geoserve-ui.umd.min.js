!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("rxjs/BehaviorSubject"),require("@angular/common/http"),require("rxjs/observable/of"),require("rxjs/operators"),require("@angular/material"),require("@angular/common")):"function"==typeof define&&define.amd?define(["exports","@angular/core","rxjs/BehaviorSubject","@angular/common/http","rxjs/observable/of","rxjs/operators","@angular/material","@angular/common"],t):t(e["earthquake-geoserve-ui"]={},e.ng.core,e.Rx,e.ng.common.http,e.Rx.Observable,e.Rx.Observable.prototype,e.ng.material,e.ng.common)}(this,function(e,t,n,o,i,a,r,s){"use strict";var p={production:!1,apiUrl:"https://earthquake.usgs.gov/ws/geoserve/",siteUrl:"http://localhost.localdomain"},c=function(){function e(){this._coordinates=new n.BehaviorSubject(null),this.coordinates=this._coordinates.asObservable(),this.HIGH_CONFIDENCE=5,this.ABOVE_AVERAGE_CONFIDENCE=4,this.AVERAGE_CONFIDENCE=3,this.BELOW_AVERAGE_CONFIDENCE=2,this.LOW_CONFIDENCE=1,this.NO_CONFIDENCE=0,this.NOT_COMPUTED=-1}return e.prototype.computeFromCoordinates=function(e,t){if("string"!=typeof e||"string"!=typeof t)return this.NOT_COMPUTED;var n,o=e.split("."),i=t.split(".");return(n=1===o.length||1===i.length?0:Math.min(o[1].length,i[1].length))>=5?this.HIGH_CONFIDENCE:n>=4?this.ABOVE_AVERAGE_CONFIDENCE:n>=3?this.AVERAGE_CONFIDENCE:n>=2?this.BELOW_AVERAGE_CONFIDENCE:n>=1?this.LOW_CONFIDENCE:n>=0?this.NO_CONFIDENCE:this.NOT_COMPUTED},e.prototype.computeFromGeocode=function(e){var t,n,o;return(n=e.extent)&&((o=Math.max(Math.abs(n.xmax-n.xmin),Math.abs(n.ymax-n.ymin)))<.001?t=this.HIGH_CONFIDENCE:o<.01?t=this.ABOVE_AVERAGE_CONFIDENCE:o<.1?t=this.AVERAGE_CONFIDENCE:o<1?t=this.BELOW_AVERAGE_CONFIDENCE:o<10?t=this.LOW_CONFIDENCE:o>=10&&(t=this.NO_CONFIDENCE)),t!==this.HIGH_CONFIDENCE&&t!==this.ABOVE_AVERAGE_CONFIDENCE&&t!==this.AVERAGE_CONFIDENCE&&t!==this.BELOW_AVERAGE_CONFIDENCE&&t!==this.LOW_CONFIDENCE&&t!==this.NO_CONFIDENCE&&(t=this.NOT_COMPUTED),t},e.prototype.computeFromGeolocate=function(e){return e>1e5?this.LOW_CONFIDENCE:e>1e4?this.BELOW_AVERAGE_CONFIDENCE:e>1e3?this.AVERAGE_CONFIDENCE:e>100?this.ABOVE_AVERAGE_CONFIDENCE:this.HIGH_CONFIDENCE},e.prototype.computeFromPoint=function(e){return e>16?this.HIGH_CONFIDENCE:e>12?this.ABOVE_AVERAGE_CONFIDENCE:e>8?this.AVERAGE_CONFIDENCE:e>4?this.BELOW_AVERAGE_CONFIDENCE:this.LOW_CONFIDENCE},e.prototype.computeZoomFromConfidence=function(e){return e===this.HIGH_CONFIDENCE?16:e===this.ABOVE_AVERAGE_CONFIDENCE?13:e===this.AVERAGE_CONFIDENCE?9:e===this.BELOW_AVERAGE_CONFIDENCE?5:(this.LOW_CONFIDENCE,1)},e.prototype.roundLocation=function(e,t){var n,o=t;return t===this.NOT_COMPUTED&&(o=0),n=parseFloat(e).toFixed(o),parseFloat(n)},e.prototype.setCoordinates=function(e){var t,n,o;t=e.confidence,n=this.roundLocation(+e.latitude,t),o=this.roundLocation(+e.longitude,t),this._coordinates.next({confidence:t,latitude:n,longitude:o,zoom:e.zoom,method:e.method,name:e.name})},e}();c.decorators=[{type:t.Injectable}],c.ctorParameters=function(){return[]};var l=function(){function e(e,t){var o=this;this.coordinatesService=e,this.http=t,this.REGIONS_URL=p.apiUrl+"regions.json",this._adminRegions=new n.BehaviorSubject(null),this._authoritative=new n.BehaviorSubject(null),this._coordinates=new n.BehaviorSubject(null),this._neicCatalog=new n.BehaviorSubject(null),this._neicResponse=new n.BehaviorSubject(null),this._tectonic=new n.BehaviorSubject(null),this._offshoreRegions=new n.BehaviorSubject(null),this.adminRegions=this._adminRegions.asObservable(),this.authoritative=this._authoritative.asObservable(),this.coordinates=this._coordinates.asObservable(),this.neicCatalog=this._neicCatalog.asObservable(),this.neicResponse=this._neicResponse.asObservable(),this.offshoreRegions=this._offshoreRegions.asObservable(),this.tectonic=this._tectonic.asObservable(),this.coordinatesService.coordinates.subscribe(function(e){o.getRegions(e.latitude,e.longitude)})}return e.prototype.empty=function(){this._adminRegions.next(null),this._authoritative.next(null),this._neicCatalog.next(null),this._neicResponse.next(null),this._offshoreRegions.next(null),this._tectonic.next(null)},e.prototype.getRegions=function(e,t){var n=this,o=this.buildUrl(e,t);this.http.get(o).pipe(a.catchError(this.handleError("getRegions",{}))).subscribe(function(e){e.admin?n._adminRegions.next(e.admin.features[0]):n._adminRegions.next(null),e.neiccatalog?n._neicCatalog.next(e.neiccatalog.features[0]):n._neicCatalog.next(null),e.neicresponse?n._neicResponse.next(e.neicresponse.features[0]):n._neicResponse.next(null),e.tectonic?n._tectonic.next(e.tectonic.features[0]):n._tectonic.next(null),e.offshore?n._offshoreRegions.next(e.offshore.features[0]):n._offshoreRegions.next(null),e.authoritative?n._authoritative.next(e.authoritative.features[0]):n._authoritative.next(null)})},e.prototype.handleError=function(e,t){return function(n){return console.error("RegionsService::handleError::"+e+"("+n.message+")"),i.of(t)}},e.prototype.buildUrl=function(e,t){for(;t<=-180;)t+=360;for(;t>180;)t-=360;return this.REGIONS_URL+"?latitude="+e+"&longitude="+t},e}();l.decorators=[{type:t.Injectable}],l.ctorParameters=function(){return[{type:c},{type:o.HttpClient}]};var u=function(){function e(e){this.regionsService=e}return e.prototype.ngOnInit=function(){},e}();u.decorators=[{type:t.Component,args:[{selector:"app-admin-region",template:'<h2>Administrative Region</h2>\n<div *ngIf="regionsService.adminRegions | async; else noAdminRegion;\n    let adminRegions" class="output-section">\n  <dl class="admin-region">\n    <app-list-item TITLE="ISO" DATA="{{ adminRegions?.properties.iso }}">\n    </app-list-item>\n    <app-list-item TITLE="Region" DATA="{{ adminRegions?.properties.region }}">\n    </app-list-item>\n    <app-list-item TITLE="Country" DATA="{{ adminRegions?.properties.country }}">\n    </app-list-item>\n  </dl>\n</div>\n\x3c!-- No administrative region was returned --\x3e\n<ng-template #noAdminRegion>\n  <app-no-data></app-no-data>\n<ng-template>\n',styles:[""]}]}],u.ctorParameters=function(){return[{type:l}]};var d=function(){function e(e){this.regionsService=e}return e.prototype.ngOnInit=function(){},e}();d.decorators=[{type:t.Component,args:[{selector:"app-authoritative-region",template:'<h2>Authoritative Region</h2>\n<div *ngIf="regionsService.authoritative | async; else noRegion;\n    let region" class="output-section">\n  <dl>\n    <app-list-item TITLE="Name" DATA="{{ region?.properties.name }}">\n    </app-list-item>\n    <app-list-item TITLE="Network" DATA="{{ region?.properties.network }}">\n    </app-list-item>\n    <app-list-item TITLE="Type" DATA="{{ region?.properties.type }}">\n    </app-list-item>\n  </dl>\n</div>\n<ng-template #noRegion>\n  <app-no-data></app-no-data>\n</ng-template>',styles:[""]}]}],d.ctorParameters=function(){return[{type:l}]};var g=function(){function e(e){this.dialogRef=e}return e.prototype.ngOnInit=function(){},e}();g.decorators=[{type:t.Component,args:[{selector:"app-location-dialog",template:'\n<h1 mat-dialog-title>Choose a Location</h1>\n<p>\n  Use one of the methods below to add a location to the map.\n</p>\n<mat-dialog-content>\n  <mat-accordion class="location-controls">\n    \x3c!-- Geolocate control panel --\x3e\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          <mat-icon class="header-icon">my_location</mat-icon>\n          Find Current Location\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <app-geolocate-input></app-geolocate-input>\n    </mat-expansion-panel>\n    \x3c!-- Geocode control panel --\x3e\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          <mat-icon class="header-icon">location_city</mat-icon>\n          Search for an Address\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <app-geocode-input></app-geocode-input>\n    </mat-expansion-panel>\n    \x3c!-- Coordinate Control panel --\x3e\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          <mat-icon class="header-icon">language</mat-icon>\n          Enter Coordinates\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <app-coordinate-input></app-coordinate-input>\n    </mat-expansion-panel>\n  </mat-accordion>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button\n    mat-raised-button\n    color="primary"\n    (click)="dialogRef.close()"\n  >\n    Close\n  </button>\n</mat-dialog-actions>',styles:[".location-controls{display:block;margin:2px 0 3px}.mat-dialog-container{background:#fafafa}.header-icon{color:#666;margin:0 1em 0 0}.location-controls mat-panel-title{-webkit-box-align:center;-ms-flex-align:center;align-items:center}"]}]}],g.ctorParameters=function(){return[{type:r.MatDialogRef}]};var m=function(){function e(e,t){this.coordinatesService=e,this.dialog=t}return Object.defineProperty(e.prototype,"coordinates",{set:function(e){e&&this.coordinatesService.setCoordinates(e)},enumerable:!0,configurable:!0}),e.prototype.onClick=function(){this.dialog&&g&&this.dialog.open(g)},e}();m.decorators=[{type:t.Component,args:[{selector:"app-geoserve-output",template:'<div *ngIf="coordinatesService.coordinates | async; else noCoordinates">\n  <app-location-output></app-location-output>\n  <app-admin-region></app-admin-region>\n  <app-authoritative-region></app-authoritative-region>\n  <app-nearby-places></app-nearby-places>\n  <app-neic-catalog-region></app-neic-catalog-region>\n  <app-neic-response-region></app-neic-response-region>\n  <app-offshore-region></app-offshore-region>\n  <app-tectonic-summary-region></app-tectonic-summary-region>\n</div>\n<ng-template #noCoordinates>\n  <p class="alert info">\n    To select a location, click the\n    <button mat-raised-button class="icon-button" (click)="onClick()">\n      <i class="material-icons">location_searching</i>\n    </button>on the map.\n  </p>\n</ng-template>',styles:[""]}]}],m.ctorParameters=function(){return[{type:c},{type:r.MatDialog}]},m.propDecorators={coordinates:[{type:t.Input}]};var h=function(){function e(){}return e.prototype.ngOnInit=function(){},e}();h.decorators=[{type:t.Component,args:[{selector:"app-list-item",template:'<dt class="title">{{ TITLE }}</dt>\n<dd class="data">{{ DATA }}</dd>\n',styles:[""]}]}],h.ctorParameters=function(){return[]},h.propDecorators={TITLE:[{type:t.Input}],DATA:[{type:t.Input}]};var f=function(){function e(e){this.coordinatesService=e}return e.prototype.ngOnInit=function(){},e}();f.decorators=[{type:t.Component,args:[{selector:"app-location-output",template:'<div *ngIf="coordinatesService.coordinates | async; let coordinates" class="location-output">\n  <h2>Location</h2>\n  <p class="coordinates alert success">\n    (\n      {{ coordinates?.latitude }},\n      {{ coordinates?.longitude }}\n    )\n  </p>\n</div>\n',styles:[""]}]}],f.ctorParameters=function(){return[{type:c}]};var E=function(){function e(){}return e.prototype.ngOnInit=function(){},e.prototype.getName=function(e){return e.properties.name+", "+e.properties.admin1_name+", "+e.properties.country_name},e.prototype.getDistance=function(e){var t=e.properties.distance;return this.round(t,1)+"km ("+this.round(this.kmToMi(t),1)+"mi) "+this.compassWinds(e.properties.azimuth)},e.prototype.getPopulation=function(e){return"Population: "+e.properties.population},e.prototype.compassWinds=function(e){var t=["N","NNE","NE","ENE","E","ESE","SE","SSE","S","SSW","SW","WSW","W","WNW","NW","NNW","N"];return t.indexOf(e)>-1?e:t[Math.round(e%360/22.5)]},e.prototype.kmToMi=function(e){return.621371*e},e.prototype.round=function(e,t){var n=Math.pow(10,t);return Math.round(e*n)/n},e}();E.decorators=[{type:t.Component,args:[{selector:"app-nearby-place",template:'<span class="name">{{ getName(place) }}</span>\n<aside class="distance">{{ getDistance(place) }}</aside>\n<aside class="population">{{ getPopulation(place) }}</aside>\n',styles:[".name{display:block}.distance,.population{color:#666;display:block;float:left;font-size:smaller}.population{float:right}"]}]}],E.ctorParameters=function(){return[]},E.propDecorators={place:[{type:t.Input}]};var y=function(){function e(e,t){var o=this;this.coordinatesService=e,this.http=t,this.PLACES_URL=p.apiUrl+"places.json",this._places=new n.BehaviorSubject(null),this.places=this._places.asObservable(),this.coordinatesService.coordinates.subscribe(function(e){o.getPlaces(e.latitude,e.longitude)})}return e.prototype.empty=function(){this._places.next(null)},e.prototype.getPlaces=function(e,t){var n=this,o=this.buildUrl(e,t);this.http.get(o).pipe(a.catchError(this.handleError("getPlaces",{event:{features:[]}}))).subscribe(function(e){n._places.next(e.event.features)})},e.prototype.handleError=function(e,t){return function(e){return console.error(e),i.of(t)}},e.prototype.buildUrl=function(e,t){for(;t<=-180;)t+=360;for(;t>180;)t-=360;return this.PLACES_URL+"?latitude="+e+"&longitude="+t+"&type=event"},e}();y.decorators=[{type:t.Injectable}],y.ctorParameters=function(){return[{type:c},{type:o.HttpClient}]};var C=function(){function e(e){this.placesService=e}return e.prototype.ngOnInit=function(){},e}();C.decorators=[{type:t.Component,args:[{selector:"app-nearby-places",template:'<h2>Nearby Places</h2>\n<div *ngIf="placesService.places | async; else noNearbyPlaces">\n  <ol>\n    <li *ngFor="let place of placesService.places | async">\n      <app-nearby-place [place]="place"></app-nearby-place>\n    </li>\n  </ol>\n</div>\n<ng-template #noNearbyPlaces>\n  <app-no-data></app-no-data>\n</ng-template>\n',styles:["ol{list-style:none;padding:0}li{clear:both;margin-bottom:.5em;overflow:hidden}"]}]}],C.ctorParameters=function(){return[{type:y}]};var v=function(){function e(e){this.regionsService=e}return e.prototype.ngOnInit=function(){},e}();v.decorators=[{type:t.Component,args:[{selector:"app-neic-catalog-region",template:'\x3c!-- NEIC Catalog region was returned, display the region --\x3e\n<h2>NEIC Catalog Region</h2>\n<div *ngIf="regionsService.neicCatalog | async; else noRegion;\n    let region "class="output-section">\n  <dl class="neic-catalog-region">\n    <app-list-item TITLE="Name" DATA="{{ region?.properties.name }}">\n    </app-list-item>\n    <app-list-item TITLE="Type" DATA="{{ region?.properties.type }}">\n    </app-list-item>\n    <app-list-item TITLE="Magnitude" DATA="{{ region?.properties.magnitude }}">\n    </app-list-item>\n  </dl>\n</div>\n\x3c!-- No NEIC Catalog region was returned --\x3e\n<ng-template #noRegion>\n  <app-no-data></app-no-data>\n</ng-template>\n',styles:[""]}]}],v.ctorParameters=function(){return[{type:l}]};var N=function(){function e(e){this.regionsService=e}return e.prototype.ngOnInit=function(){},e}();N.decorators=[{type:t.Component,args:[{selector:"app-neic-response-region",template:'\x3c!-- NEIC Response region was returned, display the region --\x3e\n<h2>NEIC Response Region</h2>\n<div *ngIf="regionsService.neicResponse | async; else noRegion;\n    let region" class="output-section">\n  <dl class="neic-response-region">\n    <app-list-item TITLE="Name" DATA="{{ region?.properties.name }}">\n    </app-list-item>\n    <app-list-item TITLE="Magnitude" DATA="{{ region?.properties.magnitude }}">\n    </app-list-item>\n    <app-list-item TITLE="Type" DATA="{{ region?.properties.type }}">\n    </app-list-item>\n  </dl>\n</div>\n\x3c!-- No administrative region was returned --\x3e\n<ng-template #noRegion>\n  <app-no-data></app-no-data>\n</ng-template>\n',styles:[""]}]}],N.ctorParameters=function(){return[{type:l}]};var O=function(){function e(){}return e.prototype.ngOnInit=function(){},e}();O.decorators=[{type:t.Component,args:[{selector:"app-no-data",template:'<div  class="no-data">\n  <p>\n    Data not available.\n  </p>\n</div>',styles:[""]}]}],O.ctorParameters=function(){return[]};var _=function(){function e(e){this.regionsService=e}return e.prototype.ngOnInit=function(){},e}();_.decorators=[{type:t.Component,args:[{selector:"app-offshore-region",template:'\x3c!-- Offshore region was returned, display the region --\x3e\n<h2>Offshore Region</h2>\n<div *ngIf="regionsService.offshoreRegions | async; else noOffshoreRegion;\n    let offshoreRegions" class="output-section">\n  <dl class="offshore-region">\n    <app-list-item TITLE="Name" DATA="{{ offshoreRegions?.properties.name }}">\n    </app-list-item>\n  </dl>\n</div>\n\x3c!-- No offshore region was returned --\x3e\n<ng-template #noOffshoreRegion>\n  <app-no-data></app-no-data>\n</ng-template>\n',styles:[""]}]}],_.ctorParameters=function(){return[{type:l}]};var I=function(){function e(e){this.regionsService=e}return e.prototype.ngOnInit=function(){},e}();I.decorators=[{type:t.Component,args:[{selector:"app-tectonic-summary-region",template:'<h2>Tectonic Summary</h2>\n<div *ngIf="regionsService.tectonic | async; else noTectonic; let tectonic"\n    class="tectonic-output">\n  <div [innerHTML]="tectonic?.properties.summary">\n  </div>\n</div>\n<ng-template #noTectonic>\n  <app-no-data></app-no-data>\n</ng-template>',styles:[""]}]}],I.ctorParameters=function(){return[{type:l}]};var b=function(){return function(){}}();b.decorators=[{type:t.NgModule,args:[{imports:[s.CommonModule],declarations:[u,d,m,h,f,E,C,v,N,O,_,I],exports:[u,d,m,f,E,C,v,N,O,_,I],providers:[c,y,l]}]}],b.ctorParameters=function(){return[]},e.GeoserveOutputModule=b,e.ɵc=c,e.ɵa=u,e.ɵd=d,e.ɵe=m,e.ɵf=h,e.ɵg=f,e.ɵh=E,e.ɵi=C,e.ɵk=v,e.ɵl=N,e.ɵm=O,e.ɵn=_,e.ɵo=I,e.ɵj=y,e.ɵb=l,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=earthquake-geoserve-ui.umd.min.js.map
